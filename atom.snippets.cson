# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson
'.source.js':
  'console.log':
    'prefix': 'log'
    'body': 'console.log(${1:"crash"})$2'
  'react':
    'prefix': 'importreact'
    'body': 'import React from \'react\''
  'flow':
    'prefix': 'flow'
    'body': '//@flow'
  'importlodash':
    'prefix': 'lodash'
    'body': 'import {${1:get}} from \'lodash/fp\''
  'reduxconnect':
    'prefix': 'reduxconnect'
    'body': 'import { connect } from \'react-redux\''
  'mapStateToProps':
    'prefix': 'mapstatetoprops'
    'body': 'const mapStateToProps = state => ({})'
  'mapDispatchToProps':
    'prefix': 'mapdispatchtoprops'
    'body': 'const mapDispatchToProps = dispatch => ({})'
  'qs':
    'prefix': 'qs'
    'body': 'import querystring from \'querystring\â€™'


'.text.html.basic':
  'meta tag':
    'prefix': 'meta'
    'body': '<meta name="viewport" content="width=device-width, initial-scale=1">$1'
